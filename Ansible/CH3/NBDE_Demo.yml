---
- name: Configure TANG Keyservers

  hosts: tang

  tasks:

    - name: Install Tang
      yum:
        name: tang
        state: present

    - name: Enable TangD.Socket
      systemd:
        name: tangd.socket
        enabled: yes
        state: started

    - name: Enable Firewall service
      firewalld:
        zone: public
        port: 80/tcp
        permanent: true
        immediate: true
        state: enabled

- name: Configure Clevis Client

  hosts: clevis

  vars:
    sss_cfg: '{"t":3,"pins":{"tang":[{"url":"http://serverb"},{"url":"http://serverc"},{"url":"http://serverd"}]}}'
    luks_pw: redhatRHT

  tasks:

    - name: Install Clevis Packages
      yum:
        name:
          - clevis
          - clevis-luks
          - clevis-dracut
        state: present


## Get ServerB Signing Key from Tang
#    - name: Retrieve ServerB Tang Data
#      shell: curl -sSf serverb/adv
#      register: tangB_output

#    - name:  Filter out Tang Signing Key
#      command: echo {{ tangB_output }} | jose fmt -j- -g payload -y -o- | jose jwk use -i- -r -u verify -o- | jose jwk thp -i-
#      register: tangB

#    - name: Display ServerB Signing Key
#      debug:
#        var: tangB

    - name: Copy Script
      copy:
        src: Scripts/tangb_key.sh
        dest: /root/tangb_key.sh
        mode: "u=rwx,g=rx,o=rx"

    - name: Retrieve ServerB Tang Data
      shell: /root/tangb_key.sh
      register: tangB_output

    - name: Display ServerB Signing Keys
      debug:
        var: tangB_output

    - name: Register ServerB Signing Keys
      set_fact:
        tangB: "{{ tangB_output.stdout }}"

    - name: Output ServerB Signing Keys as Fact
      debug:
        var: tangB

## Bind Clevis to LUKS

    - name: Perform Clevis LUKS Bind
      shell: |
        echo "{{ luks_pw }}" | clevis luks bind -f -k- -d /dev/vdb1 sss "{{ sss_cfg }}"
        expect "Do you wish to trust these keys? [ynYN]"
        send "\Y"
        expect "Do you wish to trust these keys? [ynYN]"
        send "\Y"
        expect "Do you wish to trust these keys? [ynYN]"
        send "\Y"
        exit 0

## Enable Clevis Service

    - name: Enable Clevis Service on Client for LUKS-askpass
      systemd:
        name: clevis-luks-askpass.path
        enabled: yes
        state: started

## Create Crypttab File Entries

    - name: Ensure Cryptab Keys have been added
      lineinfile:
        path: /etc/crypttab
        regexp: '^storage_demo'
        line: storage_demo /dev/vdb1  none _netdev

## Create /etc/fstab File Entries

    - name: Ensure /etc/fstab has been updated
      lineinfile:
        path: /etc/fstab
        regexp: '^/dev/mapper/storage_demo'
        line: /dev/mapper/storage_demo /mnt xfs _netdev 1 2
...
